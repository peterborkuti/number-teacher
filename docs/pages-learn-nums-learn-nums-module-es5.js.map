{"version":3,"sources":["webpack:///src/app/pages/learn-nums/learn-nums.page.html","webpack:///src/app/pages/learn-nums/teacher/teacher.component.html","webpack:///src/app/pages/learn-nums/learn-nums-routing.module.ts","webpack:///src/app/pages/learn-nums/learn-nums.module.ts","webpack:///src/app/pages/learn-nums/learn-nums.page.scss","webpack:///src/app/pages/learn-nums/learn-nums.page.ts","webpack:///src/app/pages/learn-nums/teacher/teacher.component.scss","webpack:///src/app/pages/learn-nums/teacher/teacher.component.ts","webpack:///src/app/services/core/answer-checker.service.ts","webpack:///src/app/services/hint.service.ts"],"names":["routes","path","component","LearnNumsPageRoutingModule","imports","forChild","exports","LearnNumsPageModule","declarations","LearnNumsPage","selector","template","TeacherComponent","probdbService","answerChecker","speechService","hintService","wrongAnswer","answerIsEmpty","hint","newQuestion","digits","getNumberToAsk","question","join","answer","say","hintManager","newHint","getHint","setTimeout","numberInput","setFocus","checked","check","bads","forEach","c","bad","exp","digit","goods","good","length","value","what","nextHint","AnswerCheckerService","checkSameLength","checkDifferentLength","longer","shorter","substr","badAnswer","substring","split","map","i","concat","maxExponent","qas","q","a","exponent","filter","qa","badPairs","providedIn","HintManager","HintService","hintIndexesIndex","hintIndexes","indexesInRandomOrder","Array","fill","hintIndex","n","v","Math","random","sort"],"mappings":"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","file":"pages-learn-nums-learn-nums-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">  \\n      <ion-menu-button color=\\\"dark\\\"></ion-menu-button>   \\n    </ion-buttons>\\n    <ion-title>learn-nums</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <teacher></teacher>\\n\\n</ion-content>\\n\";","export default \"<p>\\n  <ion-button name=\\\"say\\\" (click)=\\\"say(question)\\\"><ion-icon name=\\\"megaphone\\\"></ion-icon><span *ngIf=\\\"wrongAnswer\\\">{{question}}</span></ion-button>\\n\\n  <ion-button [disabled]=\\\"wrongAnswer\\\" name=\\\"hint\\\" (click)=\\\"showHint()\\\">{{hint}}</ion-button>\\n\\n  <ion-input #numberInput [disabled]=\\\"wrongAnswer\\\" (ionChange)=\\\"inputChanged($event.detail.value)\\\" autofocus=\\\"true\\\" type=\\\"number\\\" inputmode=\\\"numeric\\\" [(ngModel)]=\\\"answer\\\"></ion-input>\\n\\n  <ion-button [disabled]=\\\"answerIsEmpty\\\" name=\\\"check\\\" (click)=\\\"checkAnswer()\\\">\\n    <ion-icon name=\\\"checkmark\\\"></ion-icon>\\n  </ion-button>\\n\\n  <ion-button *ngIf=\\\"wrongAnswer\\\" color=\\\"danger\\\" name=\\\"sayAnswer\\\" (click)=\\\"say(answer)\\\"><ion-icon name=\\\"megaphone\\\"></ion-icon></ion-button>\\n</p>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LearnNumsPage } from './learn-nums.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LearnNumsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LearnNumsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LearnNumsPageRoutingModule } from './learn-nums-routing.module';\n\nimport { LearnNumsPage } from './learn-nums.page';\nimport { TeacherComponent } from './teacher/teacher.component';\nimport { ComponentsModule } from '../components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ComponentsModule,\n    LearnNumsPageRoutingModule\n  ],\n  declarations: [LearnNumsPage, TeacherComponent]\n})\nexport class LearnNumsPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xlYXJuLW51bXMvbGVhcm4tbnVtcy5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-learn-nums',\n  templateUrl: './learn-nums.page.html',\n  styleUrls: ['./learn-nums.page.scss'],\n})\nexport class LearnNumsPage implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"ion-input {\\n  --background: #DDDDDD;\\n  width: 10em;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvbGVhcm4tbnVtcy90ZWFjaGVyL3RlYWNoZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxxQkFBQTtFQUNBLFdBQUE7QUFDSiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2xlYXJuLW51bXMvdGVhY2hlci90ZWFjaGVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWlucHV0IHtcbiAgICAtLWJhY2tncm91bmQ6ICNEREREREQ7XG4gICAgd2lkdGg6IDEwZW07XG4gIH0iXX0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ProbdbService } from 'src/app/services/core/probdb.service';\nimport { AnswerCheckerService } from 'src/app/services/core/answer-checker.service';\nimport { ASpeech } from 'src/app/services/speech.service';\nimport { HintService, HintManager } from 'src/app/services/hint.service';\nimport { IonInput } from '@ionic/angular';\n\n\n@Component({\n  selector: 'teacher',\n  templateUrl: './teacher.component.html',\n  styleUrls: ['./teacher.component.scss'],\n})\nexport class TeacherComponent implements OnInit {\n  @ViewChild('numberInput') numberInput: IonInput;\n\n  question: string;\n  answer: string;\n\n  wrongAnswer = true;\n  answerIsEmpty = true;\n\n  hint = '';\n\n  private hintManager: HintManager;\n\n  constructor(\n    private probdbService: ProbdbService,\n    private answerChecker: AnswerCheckerService,\n    private speechService: ASpeech,\n    private hintService: HintService) { }\n\n  ngOnInit() {\n    this.newQuestion();\n  }\n\n  newQuestion() {\n    const digits = this.probdbService.getNumberToAsk();\n    this.question = digits.join('');\n    this.answer = '';\n    this.wrongAnswer = false;\n\n    this.say(this.question);\n\n    this.hintManager = this.hintService.newHint(this.question);\n    this.hint = this.hintManager.getHint();\n\n    setTimeout(() => this.numberInput.setFocus(), 0);\n  }\n\n  checkAnswer() {\n    if (this.wrongAnswer) {\n      this.newQuestion();\n\n      return;\n    }\n\n    const checked = this.answerChecker.check(this.question, ''+this.answer);\n    checked.bads.forEach(c => this.probdbService.bad(c.exp, c.digit));\n    checked.goods.forEach(c => this.probdbService.good(c.exp, c.digit));\n\n    this.wrongAnswer = checked.bads.length > 0;\n\n    if (!this.wrongAnswer) {\n      this.newQuestion();\n    }\n\n  }\n\n  inputChanged(value: string) {\n    this.answerIsEmpty = !value || value == ''; \n  }\n\n  say(what: string) {\n    this.speechService.say(what);\n  }\n\n  showHint() {\n    this.hint = this.hintManager.nextHint();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CheckedAnswer } from './checked-answers';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnswerCheckerService {\n\n  constructor() { }\n\n  check(question: string, answer: string) {\n    if (answer.length == question.length) {\n      return this.checkSameLength(question, answer);\n    }\n    else if (answer.length < question.length) {\n      return this.checkDifferentLength(question, answer);\n    }\n    else {\n      return this.checkDifferentLength(answer, question);\n    }\n  }\n\n  checkDifferentLength(longer: string, shorter: string) {\n    const checked = this.checkSameLength(longer.substr(-(shorter.length)), shorter);\n\n    const badAnswer = longer.substring(0, longer.length - shorter.length);\n    const bads = badAnswer.split('').map((c,i) => ({digit: +c, exp: longer.length - i - 1}));\n\n    checked.bads = checked.bads.concat(bads);\n\n    return checked;\n  }\n\n  checkSameLength(question: string, answer: string):\n    {goods: CheckedAnswer[], bads:CheckedAnswer[]}\n  {\n    const maxExponent = question.length - 1;\n    const qas = question.split('').map((c,i) => ({q: +c, a: +(answer[i]), exponent: maxExponent - i}));\n    const goods = qas.filter(qa => qa.a == qa.q).map(qa => ({digit: qa.a, exp: qa.exponent}));\n    const badPairs = qas.filter(qa => qa.a != qa.q)\n      .map(qa => ([\n        {digit: qa.a, exp: qa.exponent},\n        {digit: qa.q, exp: qa.exponent}]));\n    const bads = [].concat(...badPairs); //flattening\n\n    return {goods: goods, bads: bads};\n  }\n}\n","import { Injectable } from '@angular/core';\n\nexport class HintManager {\n  getHint: Function;\n  nextHint: Function;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HintService {\n  public newHint(question: string): HintManager {\n    let hintIndexesIndex = 0;\n    const hintIndexes = this.indexesInRandomOrder(question.length);\n    let hint = Array(question.length).fill('?');\n\n\n    return <HintManager>{\n      getHint: () => hint.join(''),\n\n      nextHint: () => {\n        hint = Array(question.length).fill('?');\n\n        const hintIndex = hintIndexes[hintIndexesIndex];\n        hintIndexesIndex = (hintIndexesIndex >= hintIndexes.length - 1) ? 0 : hintIndexesIndex + 1;\n    \n        hint[hintIndex] = question[hintIndex];\n\n        return hint.join('');\n      }\n    }\n\n  }\n\n  private indexesInRandomOrder(n: number): number[] {\n    return Array(n).fill(0).map((v,i) => i).map(i => [Math.random(), i]).sort().map(i => i[1]);\n  }\n}\n"]}