{"version":3,"sources":["webpack:///node_modules/@ionic/core/dist/esm/button-active-5da929d4.js","webpack:///node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","webpack:///node_modules/@ionic/core/dist/esm/haptic-7b8ba70a.js","webpack:///node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","webpack:///node_modules/@ionic/core/dist/esm/theme-5641d27f.js","webpack:///src/app/pages/show-probdb/probdb-map/probdb-map.component.html","webpack:///src/app/pages/components.module.ts","webpack:///src/app/pages/show-probdb/probdb-map/probdb-map.component.scss","webpack:///src/app/pages/show-probdb/probdb-map/probdb-map.component.ts","webpack:///src/app/services/core/prob-db.ts","webpack:///src/app/services/core/prob-modifier.service.ts","webpack:///src/app/services/core/probdb.service.ts","webpack:///src/app/services/storage.service.ts"],"names":["createButtonActiveGesture","el","isButton","currentTouchedButton","initialTouchedButton","activateButtonAtPoint","x","y","hapticFeedbackFn","document","target","elementFromPoint","clearActiveButton","setActiveButton","button","buttonToModify","classList","add","dispatchClick","remove","click","undefined","gestureName","threshold","onStart","ev","currentX","currentY","onMove","onEnd","attachComponent","delegate","container","component","cssClasses","componentProps","attachViewToDom","HTMLElement","Error","ownerDocument","createElement","forEach","c","Object","assign","appendChild","componentOnReady","detachComponent","element","parentElement","removeViewFromDom","Promise","resolve","HapticEngine","getEngine","win","window","TapticEngine","Capacitor","isPluginAvailable","Plugins","Haptics","available","isCordova","isCapacitor","impact","options","engine","style","toUpperCase","notification","selection","selectionStart","gestureSelectionStart","selectionChanged","gestureSelectionChanged","selectionEnd","gestureSelectionEnd","hapticSelection","hapticSelectionStart","hapticSelectionChanged","hapticSelectionEnd","hapticImpact","spinners","dur","circles","fn","index","total","animationDelay","angle","Math","PI","r","sin","cos","step","elmDuration","cx","cy","fill","viewBox","transform","_","lines","y1","y2","SPINNERS","hostContext","selector","closest","createColorClasses","color","cssClassMap","length","getClassList","classes","array","Array","isArray","split","filter","map","trim","getClassMap","SCHEME","openURL","url","direction","animation","test","router","querySelector","preventDefault","push","ComponentsModule","declarations","imports","exports","ProbdbMapComponent","template","ProbDB","name","id","Date","now","probabilities","ProbModifierService","DIGITS_NUM","maxExponent","floor","N","defaultProb","i","prob","newProb","providedIn","ProbdbService","probModifier","storage","setActive","nameOfDB","reset","getDefault","getName","getNames","getProbabilities","digits","exp","getMaxIndex","reverse","console","log","join","slice","arr","delta","maxValue","maxIndexes","v","value","vi","abs","random","digit","setProb","bad","getProb","StorageService","probdbs","db","getOrCreate","JSON","parse","stringify","getDB","save","active","probability","existsProb","error","dbs","pdb","probDB","Storage"],"mappings":"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","file":"common-es5.js","sourcesContent":["import { c as writeTask } from './index-92848855.js';\nimport { createGesture } from './index-eea61379.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-7b8ba70a.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n    let currentTouchedButton;\n    let initialTouchedButton;\n    const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n        if (typeof document === 'undefined') {\n            return;\n        }\n        const target = document.elementFromPoint(x, y);\n        if (!target || !isButton(target)) {\n            clearActiveButton();\n            return;\n        }\n        if (target !== currentTouchedButton) {\n            clearActiveButton();\n            setActiveButton(target, hapticFeedbackFn);\n        }\n    };\n    const setActiveButton = (button, hapticFeedbackFn) => {\n        currentTouchedButton = button;\n        if (!initialTouchedButton) {\n            initialTouchedButton = currentTouchedButton;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.add('ion-activated'));\n        hapticFeedbackFn();\n    };\n    const clearActiveButton = (dispatchClick = false) => {\n        if (!currentTouchedButton) {\n            return;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.remove('ion-activated'));\n        /**\n         * Clicking on one button, but releasing on another button\n         * does not dispatch a click event in browsers, so we\n         * need to do it manually here. Some browsers will\n         * dispatch a click if clicking on one button, dragging over\n         * another button, and releasing on the original button. In that\n         * case, we need to make sure we do not cause a double click there.\n         */\n        if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n            currentTouchedButton.click();\n        }\n        currentTouchedButton = undefined;\n    };\n    return createGesture({\n        el,\n        gestureName: 'buttonActiveDrag',\n        threshold: 0,\n        onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n        onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n        onEnd: () => {\n            clearActiveButton(true);\n            hapticSelectionEnd();\n            initialTouchedButton = undefined;\n        }\n    });\n};\n\nexport { createButtonActiveGesture as c };\n","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n    getEngine() {\n        const win = window;\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n    },\n    available() {\n        return !!this.getEngine();\n    },\n    isCordova() {\n        return !!window.TapticEngine;\n    },\n    isCapacitor() {\n        const win = window;\n        return !!win.Capacitor;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.impact({ style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.notification({ style });\n    },\n    selection() {\n        this.impact({ style: 'light' });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionStart();\n        }\n        else {\n            engine.gestureSelectionStart();\n        }\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionEnd();\n        }\n        else {\n            engine.gestureSelectionEnd();\n        }\n    }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n    HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n    return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction, animation);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","export default \"<p>Probabilities</p>\\n<table border=\\\"1\\\">\\n  <tr>\\n    <th></th><th *ngFor=\\\"let n of [0,1,2,3,4,5,6,7,8,9]\\\">{{n}}</th>\\n  </tr>\\n  <tr *ngFor=\\\"let row of probabilities;let rowIndex = index\\\">\\n    <th>{{rowIndex}}</th><td *ngFor=\\\"let cell of row\\\">{{cell}}</td>\\n  </tr>\\n</table>\\n\\n\";","import { NgModule } from \"@angular/core\";\nimport { ProbdbMapComponent } from './show-probdb/probdb-map/probdb-map.component';\nimport { IonicModule } from '@ionic/angular';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n    declarations: [ProbdbMapComponent],\n    imports: [IonicModule, CommonModule],\n    exports: [ProbdbMapComponent]\n})\nexport class ComponentsModule {}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Nob3ctcHJvYmRiL3Byb2JkYi1tYXAvcHJvYmRiLW1hcC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, Input } from '@angular/core';\nimport { ProbdbService } from 'src/app/services/core/probdb.service';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'probdb-map',\n  templateUrl: './probdb-map.component.html',\n  styleUrls: ['./probdb-map.component.scss'],\n})\nexport class ProbdbMapComponent implements OnInit {\n  @Input()\n  probabilities: number[][];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export class ProbDB {\n    name: string = 'Default';\n    id: string = '' + Date.now();\n    probabilities: number[][] = [[]];\n\n    constructor(name?: string) {\n        this.name = name ? name : 'Default';\n    }\n}","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProbModifierService {\n  private readonly DIGITS_NUM = 10;\n\n  constructor() { }\n\n  getDefault(maxExponent: number): number[][] {\n    if (maxExponent < 0) maxExponent = 0;\n    maxExponent = Math.floor(maxExponent);\n\n    const N = (maxExponent + 1) * this.DIGITS_NUM;\n    const defaultProb = 1.0/N;\n    \n    return Array(maxExponent + 1).fill(1)\n        .map(() => Array(this.DIGITS_NUM).fill(defaultProb).map(i => i));\n  }\n\n  good(prob: number): number {\n    let newProb = 1;\n\n    if (prob !== undefined && (prob >= 0 && prob < 1)) {\n      newProb = prob / 2.0;\n    }\n \n    return newProb;\n  }\n\n  bad(prob: number): number {\n    let newProb = 1;\n\n    if (prob !== undefined && (prob >= 0 && prob < 1)) {\n      newProb = prob  + (1.0 - prob) / 2.0;\n    }\n \n    return newProb;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { StorageService } from '../storage.service';\nimport { ProbDB } from './prob-db';\nimport { ProbModifierService } from './prob-modifier.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProbdbService {\n  constructor(private probModifier: ProbModifierService, private storage: StorageService) {\n    this.setActive('Default');\n  }\n\n  reset(nameOfDB: string) {\n    this.storage.reset(nameOfDB, this.probModifier.getDefault(3));\n  }\n\n  setActive(nameOfDB: string) {\n    this.storage.setActive(nameOfDB);\n  }\n\n  getName(): string {\n    return this.storage.getName(); \n  }\n\n  getNames() : string[] {\n    return this.storage.getNames();\n  }\n\n  getProbabilities(): number[][] {\n    return this.storage.getProbabilities();\n  }\n\n  /**\n   * Returns with the number which digits should be asked\n   * The number contains all not-leading-zeroes exponents\n   * \n   * If it contains only zeroes, it will return the last digit\n   */\n  getNumberToAsk(): number[] {\n    let digits = this.getProbabilities().map(exp => this.getMaxIndex(exp)).reverse();\n    console.log('Raw question:', digits.join(''));\n\n    while (digits.length > 1 && digits[0] == 0) {\n      digits = digits.slice(1)\n    }\n\n    return digits;\n  }\n\n  private getMaxIndex(arr: number[], delta = 0.01): number {\n    let maxValue = -1;\n\n    for (let i = 0; i < arr.length; i++) {\n      if (arr[i] > maxValue) {\n        maxValue = arr[i];\n      }\n    }\n\n    const maxIndexes = arr.map((v,i) => ({value:v, index: i})).filter(vi => Math.abs(vi.value - maxValue) < delta).map(vi => vi.index);\n\n    return maxIndexes[Math.floor(Math.random()*maxIndexes.length)];\n  }\n\n  bad(exp: number, digit: number) {\n    this.storage.setProb(exp, digit, this.probModifier.bad(this.storage.getProb(exp, digit)));\n  }\n\n  good(exp: number, digit: number) {\n    this.storage.setProb(exp, digit, this.probModifier.bad(this.storage.getProb(exp, digit)));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ProbDB } from './core/prob-db';\n\n@Injectable({\n  providedIn: 'root'\n\n})\nexport class StorageService {\n  \n  private probdbs: ProbDB[] = [];\n  private active: ProbDB;\n\n  constructor(private storage: Storage) {\n    //this.probdbs = this.loadAll();\n  }\n\n  reset(nameOfDB: string, probabilities: number[][]) {\n    const db = this.getOrCreate(nameOfDB);\n    db.probabilities = JSON.parse(JSON.stringify(probabilities));\n  }\n\n  private getOrCreate(nameOfDB = 'Default'): ProbDB {\n    let db = this.getDB(nameOfDB);\n\n    if (!db) {\n      db = this.probdbs[this.probdbs.push(new ProbDB(nameOfDB)) - 1];\n      this.save(db);\n    };\n\n    return db;\n  }\n\n  setActive(nameOfDB: string) {\n    this.active = this.getOrCreate(nameOfDB);\n  }\n\n  getName(): string {\n    return this.active ? this.active.name : ''; \n  }\n\n  getNames() : string[] {\n    return this.probdbs.map(db => db.name);\n  }\n\n  getProbabilities(): number[][] {\n    // deep copy\n    return JSON.parse(JSON.stringify(this.active.probabilities));\n  }\n\n  setProb(exp: number, digit: number, probability: number) {\n    if (!this.existsProb(exp, digit)) {\n      console.error(`Digit:${digit} or exponent:${exp} out of range`);\n      return;\n    }\n\n    this.active.probabilities[exp][digit] = probability;\n  }\n\n  private existsProb(exp: number, digit: number): boolean {\n    return !!this.active.probabilities[exp] && !!this.active.probabilities[exp][digit];\n  }\n\n  getProb(exp: number, digit: number): number {\n    return this.active.probabilities[exp][digit]\n  }\n\n\n  /**\n   * returns with a ProbDB if its name is equal to nameOfDB else undefined\n   * @param nameOfDB name of ProbDB database\n   */\n  getDB(nameOfDB: string): ProbDB | undefined {\n    let dbs = this.probdbs.filter(pdb => pdb.name ==  nameOfDB);\n\n    return dbs.length === 0 ? undefined : dbs[0];\n  }\n\n  private save(probDB: ProbDB) {\n\n  }\n\n  private load(nameOfDB: string): ProbDB {\n    return null;\n\n  }\n\n  private loadAll(): ProbDB[] {\n    return []\n\n  }\n}\n"]}