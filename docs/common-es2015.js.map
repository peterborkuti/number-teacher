{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/button-active-5da929d4.js","./node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","./node_modules/@ionic/core/dist/esm/haptic-7b8ba70a.js","./node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","./node_modules/@ionic/core/dist/esm/theme-5641d27f.js","./src/app/pages/show-probdb/probdb-map/probdb-map.component.html","./src/app/pages/components.module.ts","./src/app/pages/show-probdb/probdb-map/probdb-map.component.scss","./src/app/pages/show-probdb/probdb-map/probdb-map.component.ts","./src/app/services/core/prob-db.ts","./src/app/services/core/prob-modifier.service.ts","./src/app/services/core/probdb.service.ts","./src/app/services/storage.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACD;AACmE;;AAEvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wEAAa;AACxB;AACA;AACA;AACA,uEAAuE,qDAAoB;AAC3F,sEAAsE,qDAAsB;AAC5F;AACA;AACA,YAAY,6DAAkB;AAC9B;AACA;AACA,KAAK;AACL;;AAE0C;;;;;;;;;;;;;AC/D1C;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;ACjCtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC,KAAK;AACL;AACA,qBAAqB,iBAAiB;AACtC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;ACzGpI;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;AC7GzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,kCAAkC,MAAM,UAAU;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqF;;;;;;;;;;;;;ACtCrF;AAAe,iLAAkH,GAAG,wDAAwD,mCAAmC,UAAU,sCAAsC,MAAM,6BAA6B,E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","file":"common-es2015.js","sourcesContent":["import { c as writeTask } from './index-92848855.js';\nimport { createGesture } from './index-eea61379.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-7b8ba70a.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n    let currentTouchedButton;\n    let initialTouchedButton;\n    const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n        if (typeof document === 'undefined') {\n            return;\n        }\n        const target = document.elementFromPoint(x, y);\n        if (!target || !isButton(target)) {\n            clearActiveButton();\n            return;\n        }\n        if (target !== currentTouchedButton) {\n            clearActiveButton();\n            setActiveButton(target, hapticFeedbackFn);\n        }\n    };\n    const setActiveButton = (button, hapticFeedbackFn) => {\n        currentTouchedButton = button;\n        if (!initialTouchedButton) {\n            initialTouchedButton = currentTouchedButton;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.add('ion-activated'));\n        hapticFeedbackFn();\n    };\n    const clearActiveButton = (dispatchClick = false) => {\n        if (!currentTouchedButton) {\n            return;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.remove('ion-activated'));\n        /**\n         * Clicking on one button, but releasing on another button\n         * does not dispatch a click event in browsers, so we\n         * need to do it manually here. Some browsers will\n         * dispatch a click if clicking on one button, dragging over\n         * another button, and releasing on the original button. In that\n         * case, we need to make sure we do not cause a double click there.\n         */\n        if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n            currentTouchedButton.click();\n        }\n        currentTouchedButton = undefined;\n    };\n    return createGesture({\n        el,\n        gestureName: 'buttonActiveDrag',\n        threshold: 0,\n        onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n        onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n        onEnd: () => {\n            clearActiveButton(true);\n            hapticSelectionEnd();\n            initialTouchedButton = undefined;\n        }\n    });\n};\n\nexport { createButtonActiveGesture as c };\n","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n    getEngine() {\n        const win = window;\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n    },\n    available() {\n        return !!this.getEngine();\n    },\n    isCordova() {\n        return !!window.TapticEngine;\n    },\n    isCapacitor() {\n        const win = window;\n        return !!win.Capacitor;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.impact({ style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.notification({ style });\n    },\n    selection() {\n        this.impact({ style: 'light' });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionStart();\n        }\n        else {\n            engine.gestureSelectionStart();\n        }\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionEnd();\n        }\n        else {\n            engine.gestureSelectionEnd();\n        }\n    }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n    HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n    return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction, animation);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","export default \"<p>Probabilities</p>\\n<table border=\\\"1\\\">\\n  <tr>\\n    <th></th><th *ngFor=\\\"let n of [0,1,2,3,4,5,6,7,8,9]\\\">{{n}}</th>\\n  </tr>\\n  <tr *ngFor=\\\"let row of probabilities;let rowIndex = index\\\">\\n    <th>{{rowIndex}}</th><td *ngFor=\\\"let cell of row\\\">{{cell}}</td>\\n  </tr>\\n</table>\\n\\n\";","import { NgModule } from \"@angular/core\";\nimport { ProbdbMapComponent } from './show-probdb/probdb-map/probdb-map.component';\nimport { IonicModule } from '@ionic/angular';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n    declarations: [ProbdbMapComponent],\n    imports: [IonicModule, CommonModule],\n    exports: [ProbdbMapComponent]\n})\nexport class ComponentsModule {}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Nob3ctcHJvYmRiL3Byb2JkYi1tYXAvcHJvYmRiLW1hcC5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, OnInit, Input } from '@angular/core';\nimport { ProbdbService } from 'src/app/services/core/probdb.service';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'probdb-map',\n  templateUrl: './probdb-map.component.html',\n  styleUrls: ['./probdb-map.component.scss'],\n})\nexport class ProbdbMapComponent implements OnInit {\n  @Input()\n  probabilities: number[][];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export class ProbDB {\n    name: string = 'Default';\n    id: string = '' + Date.now();\n    probabilities: number[][] = [[]];\n\n    constructor(name?: string) {\n        this.name = name ? name : 'Default';\n    }\n}","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProbModifierService {\n  private readonly DIGITS_NUM = 10;\n\n  constructor() { }\n\n  getDefault(maxExponent: number): number[][] {\n    if (maxExponent < 0) maxExponent = 0;\n    maxExponent = Math.floor(maxExponent);\n\n    const N = (maxExponent + 1) * this.DIGITS_NUM;\n    const defaultProb = 1.0/N;\n    \n    return Array(maxExponent + 1).fill(1)\n        .map(() => Array(this.DIGITS_NUM).fill(defaultProb).map(i => i));\n  }\n\n  good(prob: number): number {\n    let newProb = 1;\n\n    if (prob !== undefined && (prob >= 0 && prob < 1)) {\n      newProb = prob / 2.0;\n    }\n \n    return newProb;\n  }\n\n  bad(prob: number): number {\n    let newProb = 1;\n\n    if (prob !== undefined && (prob >= 0 && prob < 1)) {\n      newProb = prob  + (1.0 - prob) / 2.0;\n    }\n \n    return newProb;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { StorageService } from '../storage.service';\nimport { ProbDB } from './prob-db';\nimport { ProbModifierService } from './prob-modifier.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProbdbService {\n  constructor(private probModifier: ProbModifierService, private storage: StorageService) {\n    this.setActive('Default');\n  }\n\n  reset(nameOfDB: string) {\n    this.storage.reset(nameOfDB, this.probModifier.getDefault(3));\n  }\n\n  setActive(nameOfDB: string) {\n    this.storage.setActive(nameOfDB);\n  }\n\n  getName(): string {\n    return this.storage.getName(); \n  }\n\n  getNames() : string[] {\n    return this.storage.getNames();\n  }\n\n  getProbabilities(): number[][] {\n    return this.storage.getProbabilities();\n  }\n\n  /**\n   * Returns with the number which digits should be asked\n   * The number contains all not-leading-zeroes exponents\n   * \n   * If it contains only zeroes, it will return the last digit\n   */\n  getNumberToAsk(): number[] {\n    let digits = this.getProbabilities().map(exp => this.getMaxIndex(exp)).reverse();\n    console.log('Raw question:', digits.join(''));\n\n    while (digits.length > 1 && digits[0] == 0) {\n      digits = digits.slice(1)\n    }\n\n    return digits;\n  }\n\n  private getMaxIndex(arr: number[], delta = 0.01): number {\n    let maxValue = -1;\n\n    for (let i = 0; i < arr.length; i++) {\n      if (arr[i] > maxValue) {\n        maxValue = arr[i];\n      }\n    }\n\n    const maxIndexes = arr.map((v,i) => ({value:v, index: i})).filter(vi => Math.abs(vi.value - maxValue) < delta).map(vi => vi.index);\n\n    return maxIndexes[Math.floor(Math.random()*maxIndexes.length)];\n  }\n\n  bad(exp: number, digit: number) {\n    this.storage.setProb(exp, digit, this.probModifier.bad(this.storage.getProb(exp, digit)));\n  }\n\n  good(exp: number, digit: number) {\n    this.storage.setProb(exp, digit, this.probModifier.bad(this.storage.getProb(exp, digit)));\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ProbDB } from './core/prob-db';\n\n@Injectable({\n  providedIn: 'root'\n\n})\nexport class StorageService {\n  \n  private probdbs: ProbDB[] = [];\n  private active: ProbDB;\n\n  constructor(private storage: Storage) {\n    //this.probdbs = this.loadAll();\n  }\n\n  reset(nameOfDB: string, probabilities: number[][]) {\n    const db = this.getOrCreate(nameOfDB);\n    db.probabilities = JSON.parse(JSON.stringify(probabilities));\n  }\n\n  private getOrCreate(nameOfDB = 'Default'): ProbDB {\n    let db = this.getDB(nameOfDB);\n\n    if (!db) {\n      db = this.probdbs[this.probdbs.push(new ProbDB(nameOfDB)) - 1];\n      this.save(db);\n    };\n\n    return db;\n  }\n\n  setActive(nameOfDB: string) {\n    this.active = this.getOrCreate(nameOfDB);\n  }\n\n  getName(): string {\n    return this.active ? this.active.name : ''; \n  }\n\n  getNames() : string[] {\n    return this.probdbs.map(db => db.name);\n  }\n\n  getProbabilities(): number[][] {\n    // deep copy\n    return JSON.parse(JSON.stringify(this.active.probabilities));\n  }\n\n  setProb(exp: number, digit: number, probability: number) {\n    if (!this.existsProb(exp, digit)) {\n      console.error(`Digit:${digit} or exponent:${exp} out of range`);\n      return;\n    }\n\n    this.active.probabilities[exp][digit] = probability;\n  }\n\n  private existsProb(exp: number, digit: number): boolean {\n    return !!this.active.probabilities[exp] && !!this.active.probabilities[exp][digit];\n  }\n\n  getProb(exp: number, digit: number): number {\n    return this.active.probabilities[exp][digit]\n  }\n\n\n  /**\n   * returns with a ProbDB if its name is equal to nameOfDB else undefined\n   * @param nameOfDB name of ProbDB database\n   */\n  getDB(nameOfDB: string): ProbDB | undefined {\n    let dbs = this.probdbs.filter(pdb => pdb.name ==  nameOfDB);\n\n    return dbs.length === 0 ? undefined : dbs[0];\n  }\n\n  private save(probDB: ProbDB) {\n\n  }\n\n  private load(nameOfDB: string): ProbDB {\n    return null;\n\n  }\n\n  private loadAll(): ProbDB[] {\n    return []\n\n  }\n}\n"],"sourceRoot":"webpack:///"}